/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AjusteGUI.java
 *
 * Created on 19/11/2011, 13:05:19
 */
package br.com.sig.view;

import br.com.sig.dao.AjusteDAO;
import br.com.medicalpharm.model.AjusteEstoqueModel;
import br.com.medicalpharm.model.FornecedorModel;
import br.com.medicalpharm.model.ProdutoModel;
import br.com.sig.util.ItemDbGrid;

import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author ALENCAR
 */
public class AjusteGUI extends javax.swing.JFrame implements AjusteEstoqueGUI_Interface {

    /** Creates new form AjusteGUI */
    public AjusteGUI() {
        initComponents();
         listarAjustes();
         try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            // UIManager.setLookAndFeel("com.sun.java.swing.plaf.smoothmetal.SmoothmetalLookAndAndFeel");
            //UIManager.setLookAndFeel("com.birosoft.liquid.LiquidLookAndFeel");
            //UIManager.setLookAndFeel(seta_look);
            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jb_sair = new javax.swing.JButton();
        jb_novo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jrb_notaFiscal = new javax.swing.JRadioButton();
        jrb_detalhado = new javax.swing.JRadioButton();
        jrb_descricao = new javax.swing.JRadioButton();
        jl_pesquisar_destino = new javax.swing.JLabel();
        jb_buscar = new javax.swing.JButton();
        jtf_pesquisar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciando ajustes");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jb_sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/exit.png"))); // NOI18N
        jb_sair.setText("Sair");
        jb_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_sairActionPerformed(evt);
            }
        });
        getContentPane().add(jb_sair, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, -1, 33));

        jb_novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/novo_registro.gif"))); // NOI18N
        jb_novo.setText("Novo");
        jb_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_novoActionPerformed(evt);
            }
        });
        getContentPane().add(jb_novo, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Consultas"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup1.add(jrb_notaFiscal);
        jrb_notaFiscal.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jrb_notaFiscal.setSelected(true);
        jrb_notaFiscal.setText("Nota Fiscal");
        jrb_notaFiscal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_notaFiscalActionPerformed(evt);
            }
        });
        jPanel1.add(jrb_notaFiscal, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 27, -1, -1));

        buttonGroup1.add(jrb_detalhado);
        jrb_detalhado.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jrb_detalhado.setText("Específica");
        jPanel1.add(jrb_detalhado, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, -1));

        buttonGroup1.add(jrb_descricao);
        jrb_descricao.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jrb_descricao.setText("Descrição");
        jPanel1.add(jrb_descricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, -1, -1));

        jl_pesquisar_destino.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jl_pesquisar_destino.setText("Parâmetro");
        jPanel1.add(jl_pesquisar_destino, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 62, -1, -1));

        jb_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/ok.png"))); // NOI18N
        jb_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_buscarActionPerformed1(evt);
            }
        });
        jPanel1.add(jb_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 60, -1, -1));
        jPanel1.add(jtf_pesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 520, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 688, 109));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Lote", "Preço", "Quantidade", "Vencimento", "Usuário", "Movimento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 688, 80));

        jTable2.setUpdateSelectionOnSort(false);
        jTable2.setVerifyInputWhenFocusTarget(false);
        jTable2.setDefaultEditor(Object.class, null);
        jTable2.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e){
                if(e.getClickCount() == 1){
                    mostrarItem();
                }}});
                jTable2.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Código", "Fornecedor", "Lançamento", "Nota Fiscal", "N° de Sériel", "Emissão"
                    }
                ) {
                    Class[] types = new Class [] {
                        java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                    };
                    boolean[] canEdit = new boolean [] {
                        false, false, false, false, false, false
                    };

                    public Class getColumnClass(int columnIndex) {
                        return types [columnIndex];
                    }

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit [columnIndex];
                    }
                });
                jTable2.setName("jTable2"); // NOI18N
                jTable2.getTableHeader().setReorderingAllowed(false);
                jScrollPane3.setViewportView(jTable2);

                getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 688, 166));

                setSize(new java.awt.Dimension(755, 498));
                setLocationRelativeTo(null);
            }// </editor-fold>//GEN-END:initComponents

private void jb_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_sairActionPerformed
        setVisible(false);
//        janelapai.setVisible(true);
//        janelapai.setEnabled(true);
//                
        janelaPai2.estoqueMinimo();
        telaPrincipal.setStatusTela(true);
}//GEN-LAST:event_jb_sairActionPerformed

  private TelaPrincipal_Interface telaPrincipal;//Recebendo tela como parametro para atualização apos pesquisa

    public void setTelaPrincipal(TelaPrincipal_Interface telaPrincipal) {
        this.telaPrincipal = telaPrincipal;
    }
    Integer codUsuario;
    String nomeUsuario;
    TelaPrincipal janelaPai2;
    
    public void setUsuario(TelaPrincipal janelaPai2) {
        this.janelaPai2 = janelaPai2;
     //   jtf_usuário.setText(janelaPai2.usuarioNome);
        nomeUsuario = janelaPai2.usuarioNome;
        codUsuario = janelaPai2.codUsuario;
    }

private void jb_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_novoActionPerformed

        try {
            AjusteEstoqueGUI ajusteGUI;
            ajusteGUI = new AjusteEstoqueGUI();
            ajusteGUI.setTelaPrincipal(this);
            ajusteGUI.setUsuario(this);
            ajusteGUI.setVisible(true);
            setStatusTela(false);
        } catch (SQLException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jb_novoActionPerformed

private void jrb_notaFiscalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_notaFiscalActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jrb_notaFiscalActionPerformed

private void jb_buscarActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_buscarActionPerformed1
        if (jrb_notaFiscal.isSelected()) {
            listarEntradaNotas();
        } else if (jrb_descricao.isSelected()) {
            listarFornecedor();
        } else if (jrb_detalhado.isSelected()) {
            listarFornecedor();
        } else {
            listarAjustes();
        }
        // TODO add your handling code here:
}//GEN-LAST:event_jb_buscarActionPerformed1

private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
  setVisible(false);
//        janelapai.setVisible(true);
//        janelapai.setEnabled(true);
//                
        janelaPai2.estoqueMinimo();
        telaPrincipal.setStatusTela(true);
    // TODO add your handling code here:
}//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
      
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AjusteGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jb_buscar;
    private javax.swing.JButton jb_novo;
    private javax.swing.JButton jb_sair;
    private javax.swing.JLabel jl_pesquisar_destino;
    private javax.swing.JRadioButton jrb_descricao;
    private javax.swing.JRadioButton jrb_detalhado;
    private javax.swing.JRadioButton jrb_notaFiscal;
    private javax.swing.JTextField jtf_pesquisar;
    // End of variables declaration//GEN-END:variables


    
    public void listarEntradaNotas() {
        if (jtf_pesquisar.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Informe o código para procurar");
        } else {
            AjusteDAO ajuste = new AjusteDAO();      
            Integer nota;
            nota = Integer.parseInt(jtf_pesquisar.getText());
            ajustes = ajuste.listarDescricao(nota);
            mostrarAjuste(ajustes);     
        }
    }

    public void listarFornecedor() {
        AjusteDAO ajuste = new AjusteDAO(); 
        ajustes = ajuste.listarDescricao(jtf_pesquisar.getText().trim() + "%");
        mostrarAjuste(ajustes); 
    }

    List<AjusteEstoqueModel> ajustes;
    public void listarAjustes() {
        AjusteDAO ajuste = new AjusteDAO();        
        ajustes = ajuste.listarDescricao("%" + jtf_pesquisar.getText().trim() + "%");
        mostrarAjuste(ajustes);        
    }

    public void mostrarAjuste(List<AjusteEstoqueModel> ajustes) {
        DefaultTableModel tableModel = (DefaultTableModel) jTable2.getModel();
        tableModel.setNumRows(0);
        
        DefaultTableModel tableModel1 = (DefaultTableModel) jTable1.getModel();
        tableModel1.setNumRows(0);

        if (ajustes.size() == 0) {
            JOptionPane.showMessageDialog(this, "Nenhum ajuste encontrado");

        } else {

            for (int i = 0; i < ajustes.size(); i++) {
                try {
                    AjusteEstoqueModel ajuste = new AjusteEstoqueModel();
                    
                    ajuste = new AjusteEstoqueModel();
                    ajuste.setIdMovimento(ajustes.get(i).getIdMovimento());
                    ajuste.setDataMovimento(ajustes.get(i).getDataMovimento());
                    ajuste.setFornecedor(ajustes.get(i).getFornecedor());
                    ajuste.setNotaFiscal(ajustes.get(i).getNotaFiscal());
                    ajuste.setnSérie(ajustes.get(i).getnSérie());
                    ajuste.setDataEmissao(ajustes.get(i).getDataEmissao());
                    ajuste.setProduto(ajustes.get(i).getProduto());
                    ajuste.setLote(ajustes.get(i).getLote());
                    ajuste.setPreco(ajustes.get(i).getPreco());
                    ajuste.setQuantidade(ajustes.get(i).getQuantidade());
                    ajuste.setDataVencimento(ajustes.get(i).getDataVencimento());
                    ajuste.setUsuario(ajustes.get(i).getUsuario());
                    ajuste.setTipoMovimento(ajustes.get(i).getTipoMovimento());
                   
                    SimpleDateFormat in = new SimpleDateFormat("yyyy-MM-dd");
                    SimpleDateFormat out = new SimpleDateFormat("dd/MM/yyyy");


                    String movimento = out.format(in.parse(ajustes.get(i).getDataMovimento().toString()));
                    String emissao = out.format(in.parse(ajustes.get(i).getDataEmissao().toString()));
                    String vencimento = out.format(in.parse(ajustes.get(i).getDataVencimento().toString()));
              
                    DefaultTableModel row = (DefaultTableModel) jTable2.getModel();
                    ItemDbGrid hashDbGrid = new ItemDbGrid(ajuste, ajuste.getFornecedor().getRazao_social());
                    row.addRow(new Object[]{ajuste.getIdMovimento(), movimento, hashDbGrid, ajuste.getNotaFiscal(), ajuste.getnSérie(), emissao});
                    
                    
                } catch (Exception erro) {
                    erro.printStackTrace();
                } 

            }
        }

    }

    public void mostrarItem(){
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        tableModel.setNumRows(0);
        
        AjusteEstoqueModel ajuste = tbAjusteSelecionado(jTable2);
        String preço = null;
        preço = String.valueOf(ajuste.getPreco());
        preço = setPrecoFormat(preço);
        
        
        DefaultTableModel row1 = (DefaultTableModel) jTable1.getModel();

         ItemDbGrid hashDbGrid1 = new ItemDbGrid(ajuste, ajuste.getProduto().getNome_produto());
        row1.addRow(new Object[]{hashDbGrid1, ajuste.getLote(),preço, ajuste.getQuantidade(),
        ajuste.getDataVencimento(),ajuste.getUsuario().getNome_usuario(),ajuste.getTipoMovimento()});

        
        
        
    }
    
    
    public AjusteEstoqueModel tbAjusteSelecionado(JTable tb) {
        AjusteEstoqueModel ajuste = null;
        if (tb.getSelectedRow() != -1) {
            ajuste = new AjusteEstoqueModel();
            ajuste = ajustes.get(tb.getSelectedRow());
            
        }else {
            JOptionPane.showMessageDialog(null, "eroo");
        }
        return ajuste;

    }

    public void carregaProduto(ProdutoModel produto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void carregaFornecedor(FornecedorModel fornecedor) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setStatusTela(boolean status) {
        if (status) {
            this.setVisible(status);
        }
        this.setEnabled(status);
    }
    
        public Double getPrecoFormato(String preco) {
        Double precoFormatado = 0.0;
        try {
            preco = preco.replace("R", "");
            preco = preco.replace("$", "");
            preco = preco.replace(",", ".");
            preco = preco.replace(" ", "");
            precoFormatado = Double.parseDouble(preco.trim());

            //this.objFuncionario.setSalario(getSalarioFormat(jTSalario.getText())); pegar valor em double

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Valor Informado Incorreto!\nInforme um valor com o seguinte formato:\nEx: 100,00");
        }
        return precoFormatado;
    }

    public String setPrecoFormat(String preco) {
        DecimalFormat dFormat = new DecimalFormat();
        dFormat.applyPattern("R$ #0.00");
        return dFormat.format(getPrecoFormato(preco));
    }

}
