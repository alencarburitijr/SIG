/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Mov_Saída.java
 *
 * Created on 07/04/2011, 20:48:16
 */
package br.com.sig.view;

import br.com.sig.dao.ArmazemDAO;
import br.com.sig.dao.DestinoDAO;
import br.com.sig.dao.ProdutoDAO;
import br.com.medicalpharm.model.SaidaArmazemItemModel;
import br.com.medicalpharm.model.SaidaArmazemModel;
import br.com.medicalpharm.model.ArmazemModel;
import br.com.medicalpharm.model.ProdutoModel;
import br.com.medicalpharm.model.SaidaItemModel;
import br.com.medicalpharm.model.SaidaModel;
import br.com.medicalpharm.model.UsuarioRequisitanteModel;
import br.com.medicalpharm.model.VeiculoModel;
import br.com.sig.util.ItemDbGrid;
import br.com.sig.util.LimitadorTexto;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Alencar
 */
public class ArmazemCadastroGUI extends javax.swing.JFrame implements ArmazemCadastroGUI_Interface {

    MaskFormatter formatoData;
    List<ProdutoModel> produtos;
    List<ArmazemModel> destinos;
    SaidaItemModel saidaItemModel = new SaidaItemModel();
    ProdutoModel produtoCombo;
    SaidaModel saidaModel = new SaidaModel();

    /** Creates new form Mov_Saída */
    public ArmazemCadastroGUI() {
        initComponents();
        listarDestino();
        listarProduto();
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            // UIManager.setLookAndFeel("com.sun.java.swing.plaf.smoothmetal.SmoothmetalLookAndAndFeel");
            //UIManager.setLookAndFeel("com.birosoft.liquid.LiquidLookAndFeel");
            //UIManager.setLookAndFeel(seta_look);
            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jtf_quantidade = new javax.swing.JTextField(new LimitadorTexto(11), "",10);
        jb_adicionar = new javax.swing.JButton();
        jb_eliminar = new javax.swing.JButton();
        jtf_estoque = new javax.swing.JTextField();
        jtf_codigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jtf_produto = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jrb_consumo = new javax.swing.JRadioButton();
        jrb_descarte = new javax.swing.JRadioButton();
        try  {      
            formatoData = new MaskFormatter("##/##/####");  
        } 
        catch (Exception erro)  
        {    
            JOptionPane.showMessageDialog(null,"Não foi possivel setar");  
        }
        jftf_data = new JFormattedTextField(formatoData);
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jb_salvar = new javax.swing.JButton();
        jb_cancelar = new javax.swing.JButton();
        jtf_armazem = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtf_cod_arm = new javax.swing.JTextField();
        jb_armazem = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jb_limpar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtf_codigoUsuarioRequisitante = new javax.swing.JTextField();
        jtf_usuarioRequisitante = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jtf_veiculo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtf_codigoVeiculo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Saída de estoque por almoxarifado");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens"));
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtf_quantidade.addKeyListener(new java.awt.event.KeyAdapter() {     // cria um listener ouvinte de digitação do fieldNumero

            public void keyReleased(java.awt.event.KeyEvent evt) {  // cria um ouvinte para cada tecla pressionada

                jtf_quantidade.setText(jtf_quantidade.getText().replaceAll("[^0-9]", "")); // faz com que pegue o texto a cada tecla digitada, e substituir tudo que não(^) seja numero  por ""

            }
        });
        jtf_quantidade.setName("jtf_quantidade"); // NOI18N
        jtf_quantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_quantidadeActionPerformed(evt);
            }
        });
        jtf_quantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_quantidadeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_quantidadeFocusLost(evt);
            }
        });
        jPanel2.add(jtf_quantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 70, -1));

        jb_adicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/edit_add.png"))); // NOI18N
        jb_adicionar.setName("jb_adicionar"); // NOI18N
        jb_adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_adicionarActionPerformed(evt);
            }
        });
        jPanel2.add(jb_adicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 40, 30));

        jb_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/edit_remove.png"))); // NOI18N
        jb_eliminar.setName("jb_eliminar"); // NOI18N
        jb_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jb_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 40, -1));

        jtf_estoque.setEnabled(false);
        jtf_estoque.setName("jtf_estoque"); // NOI18N
        jPanel2.add(jtf_estoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 70, -1));

        jtf_codigo.setEnabled(false);
        jtf_codigo.setName("jtf_codigo"); // NOI18N
        jtf_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_codigoActionPerformed(evt);
            }
        });
        jPanel2.add(jtf_codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 70, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("Estoque");
        jLabel2.setName("jLabel2"); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Código");
        jLabel3.setName("jLabel3"); // NOI18N
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setText("Produto / Apresentação");
        jLabel4.setName("jLabel4"); // NOI18N
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel6.setText("Quantidade");
        jLabel6.setName("jLabel6"); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, -1, -1));

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód", "Produto", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(8);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 400, 190));

        jtf_produto.setName("jtf_produto"); // NOI18N
        jtf_produto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_produtoFocusLost(evt);
            }
        });
        jtf_produto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_produtoKeyPressed(evt);
            }
        });
        jPanel2.add(jtf_produto, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 280, -1));

        jButton1.setText("...");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton1FocusLost(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, 30, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 450, 340));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Motivo"));
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPanel3FocusLost(evt);
            }
        });

        buttonGroup1.add(jrb_consumo);
        jrb_consumo.setSelected(true);
        jrb_consumo.setText("Consumo");
        jrb_consumo.setName("jrb_consumo"); // NOI18N

        buttonGroup1.add(jrb_descarte);
        jrb_descarte.setText("Descarte");
        jrb_descarte.setName("jrb_descarte"); // NOI18N
        jrb_descarte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_descarteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jrb_consumo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jrb_descarte)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jrb_descarte)
                .addComponent(jrb_consumo))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 160, -1));

        jftf_data.setName("jftf_data"); // NOI18N
        jftf_data.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jftf_dataFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftf_dataFocusLost(evt);
            }
        });
        getContentPane().add(jftf_data, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 70, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Código");
        jLabel1.setName("jLabel1"); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 60, -1));

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel14.setText("Data");
        jLabel14.setName("jLabel14"); // NOI18N
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jb_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/gravar_registro.gif"))); // NOI18N
        jb_salvar.setText("Salvar");
        jb_salvar.setName("jb_salvar"); // NOI18N
        jb_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_salvarActionPerformed(evt);
            }
        });
        getContentPane().add(jb_salvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, -1, 40));

        jb_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/exit.png"))); // NOI18N
        jb_cancelar.setText("Cancelar");
        jb_cancelar.setName("jb_cancelar"); // NOI18N
        jb_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cancelarActionPerformed(evt);
            }
        });
        getContentPane().add(jb_cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, 40));

        jtf_armazem.setName("jtf_armazem"); // NOI18N
        jtf_armazem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_armazemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_armazemFocusLost(evt);
            }
        });
        jtf_armazem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_armazemKeyPressed(evt);
            }
        });
        getContentPane().add(jtf_armazem, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 310, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel5.setText("Almoxarifado");
        jLabel5.setName("jLabel5"); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 90, -1));

        jtf_cod_arm.setEditable(false);
        jtf_cod_arm.setName("jtf_cod_arm"); // NOI18N
        getContentPane().add(jtf_cod_arm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 80, -1));

        jb_armazem.setText("...");
        jb_armazem.setName("jb_armazem"); // NOI18N
        jb_armazem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_armazemActionPerformed(evt);
            }
        });
        jb_armazem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jb_armazemFocusLost(evt);
            }
        });
        getContentPane().add(jb_armazem, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, 30, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/shoppingbasket_delete.png"))); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 80, 50));

        jb_limpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/limpar.png"))); // NOI18N
        jb_limpar.setText("Limpar");
        jb_limpar.setName("jb_limpar"); // NOI18N
        jb_limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_limparActionPerformed(evt);
            }
        });
        getContentPane().add(jb_limpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, -1, 40));

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel8.setText("Código");
        jLabel8.setName("jLabel8"); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 60, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel9.setText("Usuario Requisitante:");
        jLabel9.setName("jLabel9"); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));

        jtf_codigoUsuarioRequisitante.setEnabled(false);
        jtf_codigoUsuarioRequisitante.setName("jtf_codigoUsuarioRequisitante"); // NOI18N
        getContentPane().add(jtf_codigoUsuarioRequisitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 80, -1));

        jtf_usuarioRequisitante.setName("jtf_usuarioRequisitante"); // NOI18N
        getContentPane().add(jtf_usuarioRequisitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 310, -1));

        jButton2.setText("...");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 220, 30, -1));

        jButton3.setText("...");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 280, 30, -1));

        jtf_veiculo.setName("jtf_veiculo"); // NOI18N
        getContentPane().add(jtf_veiculo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 310, -1));

        jLabel11.setText("Veiculo:");
        jLabel11.setName("jLabel11"); // NOI18N
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, -1, -1));

        jLabel10.setText("Código");
        jLabel10.setName("jLabel10"); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));

        jtf_codigoVeiculo.setEnabled(false);
        jtf_codigoVeiculo.setName("jtf_codigoVeiculo"); // NOI18N
        getContentPane().add(jtf_codigoVeiculo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 80, -1));

        setSize(new java.awt.Dimension(511, 725));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jb_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_salvarActionPerformed
        saidaEstoque();
    }//GEN-LAST:event_jb_salvarActionPerformed

    private void jb_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cancelarActionPerformed
        ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
        jTable1.updateUI();
        this.setVisible(false);
        janelapai.setEnabled(true);
        janelapai.setVisible(true);
    }//GEN-LAST:event_jb_cancelarActionPerformed

    private void jb_adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_adicionarActionPerformed
        if (verificarItem() && verificaTabela()==true) {//&&verificaTabela()
//            JOptionPane.showMessageDialog(null, armazemItemModel.getQuantidade());
//            JOptionPane.showMessageDialog(null, jtf_quantidade.getText());
            if (Integer.parseInt(jtf_quantidade.getText()) > produto.getEstoque()) {
                JOptionPane.showMessageDialog(null, "Estoque insuficiente");
                jtf_quantidade.requestFocus();
            } else {
                adicionarItem();
            }
        }
}//GEN-LAST:event_jb_adicionarActionPerformed

    private void jb_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_eliminarActionPerformed
        DefaultTableModel row = (DefaultTableModel) jTable1.getModel();
        if (jTable1.getSelectedRow() != -1) {
            int selectedOption = JOptionPane.showConfirmDialog(this, "Deseja excluir ?", "Atenção", JOptionPane.YES_NO_OPTION);
            if (selectedOption == JOptionPane.YES_NO_OPTION) {
                row.removeRow(jTable1.getSelectedRow());
            } else {
                JOptionPane.showMessageDialog(null, "Selecione um produto");
            }
        }

        // TODO add your handling code here:
}//GEN-LAST:event_jb_eliminarActionPerformed
    public ArmazemGUI janelapai;
    private TelaPrincipal_Interface telaPrincipal;//Recebendo tela como parametro para atualização apos pesquisa

    public void setTelaPrincipal(TelaPrincipal_Interface telaPrincipal) {
        this.telaPrincipal = telaPrincipal;
    }

    private void jftf_dataFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftf_dataFocusLost
//        jPanel3.requestFocus();
    }//GEN-LAST:event_jftf_dataFocusLost

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
        jTable1.updateUI();
        this.setVisible(false);
        janelapai.setEnabled(true);
        janelapai.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jftf_data.requestFocus();
    }//GEN-LAST:event_formWindowOpened

    private void jtf_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_codigoActionPerformed

    private void jftf_dataFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftf_dataFocusGained
        jftf_data.setInputVerifier(new InputVerifier() {

            public boolean verify(JComponent input) {
                if (jftf_data.getText().trim().length() < 10) {
                    JOptionPane.showMessageDialog(null, "Data de emissão inválida");
                    return false;
                } else if (jftf_data.getText().equals("  /  /    ")) {
                    JOptionPane.showMessageDialog(null, "Informe a data de saída");

                    return false;
                } else {
                    try {
                        if (!validaData(jftf_data.getText())) {
                            JOptionPane.showMessageDialog(null, "Data de saida inválida");
                            return false;
                        } else {
                            //jtf_armazem.requestFocus();
                            return true;
                        }
                    } catch (ParseException ex) {
                        Logger.getLogger(AjusteEstoqueGUI.class.getName()).log(Level.SEVERE, null, ex);
                        return false;
                    }
                }
            }
        });
        // TODO add your handling code here:
    }//GEN-LAST:event_jftf_dataFocusGained

    private void jtf_quantidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_quantidadeFocusGained
//        jtf_quantidade.setInputVerifier(new InputVerifier() {
//
//            public boolean verify(JComponent input) {
//                if (jtf_quantidade.getText().length() == 0) {
//                    JOptionPane.showMessageDialog(null, "Informe a quantidade");
//                    jtf_quantidade.requestFocus();
//                    return false;
//                } else {
//                    return true;
//                }
//            }
//        });
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_quantidadeFocusGained

    private void jrb_descarteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_descarteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrb_descarteActionPerformed
    private ArmazemModel destinoCombo;
    private void jtf_quantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_quantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_quantidadeActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    if (jtf_cod_arm.getText().equals("")) {
        JOptionPane.showMessageDialog(null, "Informe o armazém ");
    } else {

        if (lista(jtf_cod_arm.getText().trim()) == true) {
            ProdutoConsultarGUI conProduto = new ProdutoConsultarGUI();
            conProduto.setTelaArmazemEstoque(this);;
            conProduto.janelapai4 = this;
            conProduto.setVisible(true);
            setStatusTela(false);
            conProduto.mostra(produtos);
        } else {
        }


    }
    // TODO add your handling code here:
}//GEN-LAST:event_jButton1ActionPerformed
    public boolean lista(String consulta) {
        ProdutoDAO prod = new ProdutoDAO();
        produtos = prod.lista(consulta);
        if (produtos.size() == 0) {
            JOptionPane.showMessageDialog(null, "Nenhum produto encontrado");
            return false;
        } else {
            return true;
        }

    }
private void jb_armazemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_armazemActionPerformed
    DestinoConsultarGUI1 conDestino = new DestinoConsultarGUI1();
    conDestino.setTelaArmazem(this);;
    conDestino.janelapai4 = this;
    conDestino.listaArmazem(jtf_armazem.getText().trim());
    conDestino.setCadastro();
    conDestino.setVisible(true);
    setStatusTela(false);
    // TODO add your handling code here:
}//GEN-LAST:event_jb_armazemActionPerformed

private void jtf_armazemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_armazemKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        DestinoConsultarGUI1 conDestino = new DestinoConsultarGUI1();
        conDestino.setTelaArmazem(this);;
        conDestino.janelapai4 = this;
        conDestino.setCadastro();
        conDestino.listaArmazem(jtf_armazem.getText().trim());
        conDestino.setVisible(true);
        setStatusTela(false);
        jtf_armazem.setEnabled(false);
        jb_armazem.setEnabled(false);

    } else if (evt.getKeyCode() == KeyEvent.VK_TAB) {
        DestinoConsultarGUI1 conDestino = new DestinoConsultarGUI1();
        conDestino.setTelaArmazem(this);;
        conDestino.janelapai4 = this;
        conDestino.setCadastro();
        conDestino.listaArmazem(jtf_armazem.getText().trim());
        conDestino.setVisible(true);
        setStatusTela(false);
        jtf_armazem.setEnabled(false);
        jb_armazem.setEnabled(false);
    }


    // TODO add your handling code here:
}//GEN-LAST:event_jtf_armazemKeyPressed

private void jtf_produtoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_produtoKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        if (jtf_cod_arm.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Informe o armazém ");
        } else {

            if (lista(jtf_cod_arm.getText().trim()) == true) {
                ProdutoConsultarGUI conProduto = new ProdutoConsultarGUI();
                conProduto.setTelaArmazemEstoque(this);;
                conProduto.janelapai4 = this;
                conProduto.setVisible(true);
                setStatusTela(false);
                conProduto.mostra(produtos);
            } else {
            }


        }
    }
    if (evt.getKeyCode() == KeyEvent.VK_TAB) {
        if (jtf_cod_arm.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Informe o armazém ");
        } else {

            if (lista(jtf_cod_arm.getText().trim()) == true) {
                ProdutoConsultarGUI conProduto = new ProdutoConsultarGUI();
                conProduto.setTelaArmazemEstoque(this);;
                conProduto.janelapai4 = this;
                conProduto.setVisible(true);
                setStatusTela(false);
                conProduto.mostra(produtos);
            } else {
            }


        }
    }
    // TODO add your handling code here:
}//GEN-LAST:event_jtf_produtoKeyPressed

private void jtf_armazemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_armazemFocusLost
    jtf_produto.requestFocus();
    // TODO add your handling code here:
}//GEN-LAST:event_jtf_armazemFocusLost

private void jtf_armazemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_armazemFocusGained
    jtf_armazem.setInputVerifier(new InputVerifier() {

        public boolean verify(JComponent input) {
            if (jtf_armazem.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Informe o armzem");
                jtf_armazem.requestFocus();
                return false;
            } else {
                return true;
            }
        }
    });
    // TODO add your handling code here:
}//GEN-LAST:event_jtf_armazemFocusGained

private void jb_limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_limparActionPerformed
    //jftf_data.setText("");
    jtf_cod_arm.setText("");
    jtf_armazem.setText("");
    jtf_produto.setText("");
    jtf_codigo.setText("");
    jtf_quantidade.setText("");
    jtf_estoque.setText("");
    jtf_cod_arm.setText("");
    jtf_armazem.setEnabled(true);
    jb_armazem.setEnabled(true);
    ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
    jTable1.updateUI();
    jftf_data.requestFocus();
    // TODO add your handling code here:
}//GEN-LAST:event_jb_limparActionPerformed

private void jPanel3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel3FocusLost
    jtf_armazem.requestFocus();
    // TODO add your handling code here:
}//GEN-LAST:event_jPanel3FocusLost

private void jtf_produtoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_produtoFocusLost
    jtf_quantidade.requestFocus();
    // TODO add your handling code here:
}//GEN-LAST:event_jtf_produtoFocusLost

private void jb_armazemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jb_armazemFocusLost
    jtf_produto.requestFocus();
    // TODO add your handling code here:
}//GEN-LAST:event_jb_armazemFocusLost

private void jButton1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton1FocusLost
    jtf_quantidade.requestFocus();
    // TODO add your handling code here:
}//GEN-LAST:event_jButton1FocusLost

private void jtf_quantidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_quantidadeFocusLost
//    jb_adicionar.requestFocus();
    // TODO add your handling code here:
}//GEN-LAST:event_jtf_quantidadeFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        RequisitanteConsultarGUI requi = new RequisitanteConsultarGUI();
        requi.listarUsuarios(jtf_usuarioRequisitante.getText());
        requi.setSaidaEstoque(this);
        requi.saidaEstoque = this;
        requi.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        VeiculoConsultar2GUI mostrar = new VeiculoConsultar2GUI();
        mostrar.listarVeiculos(jtf_veiculo.getText());
        mostrar.setSaidaEstoque(this);
        mostrar.saidaEstoque = this;
        mostrar.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ArmazemCadastroGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jb_adicionar;
    private javax.swing.JButton jb_armazem;
    private javax.swing.JButton jb_cancelar;
    private javax.swing.JButton jb_eliminar;
    private javax.swing.JButton jb_limpar;
    private javax.swing.JButton jb_salvar;
    private javax.swing.JFormattedTextField jftf_data;
    private javax.swing.JRadioButton jrb_consumo;
    private javax.swing.JRadioButton jrb_descarte;
    private javax.swing.JTextField jtf_armazem;
    private javax.swing.JTextField jtf_cod_arm;
    private javax.swing.JTextField jtf_codigo;
    private javax.swing.JTextField jtf_codigoUsuarioRequisitante;
    private javax.swing.JTextField jtf_codigoVeiculo;
    private javax.swing.JTextField jtf_estoque;
    private javax.swing.JTextField jtf_produto;
    private javax.swing.JTextField jtf_quantidade;
    private javax.swing.JTextField jtf_usuarioRequisitante;
    private javax.swing.JTextField jtf_veiculo;
    // End of variables declaration//GEN-END:variables

    public void statusTela(boolean status) {
        if (status) {
            this.setVisible(status);
        }
        this.setEnabled(status);
    }

    public boolean verificarItem() {
        String msgERRO = "Preencha os campos obrigatórios:\n";

        if (jtf_codigo.getText().equals("")) {
            msgERRO = msgERRO + " *Produto\n";
        }
        if (jtf_quantidade.getText().equals("")) {
            msgERRO = msgERRO + " *Quantidade\n";
        }
        if (!msgERRO.equals("Preencha os campos obrigatórios:\n")) {
            JOptionPane.showMessageDialog(this, msgERRO);
            jtf_quantidade.requestFocus();
            return false;
        }

        if (jtf_quantidade.getText().equals("0")) {
            JOptionPane.showMessageDialog(null, "Informe uma quantidade maior que zero");
            return false;
        }
        return true;

    }
    ArmazemDAO controlArmazem = new ArmazemDAO();

    private void saidaEstoque() {
        try {

            if (verificaCampos()) {
                SaidaArmazemModel armazemSaida = new SaidaArmazemModel();

                List<SaidaArmazemItemModel> itens = new ArrayList<SaidaArmazemItemModel>();


                for (Integer i = 0; i < jTable1.getRowCount(); i++) {
                    SaidaArmazemItemModel armazemItem = new SaidaArmazemItemModel();
                    armazemItem.setProduto(new ProdutoModel((Integer) jTable1.getValueAt(i, 0)));
                    armazemItem.setQuantidade(Integer.parseInt((String) jTable1.getValueAt(i, 2)));

                    itens.add(armazemItem);
                }

                armazemSaida.setDestino(armazem);
                armazemSaida.setDataMovimento(new SimpleDateFormat("dd/MM/yyyy").parse(jftf_data.getText()));
                armazemSaida.setCodigoVeiculo(Integer.parseInt(jtf_codigoVeiculo.getText()));
                armazemSaida.setIdrequisitante(Integer.parseInt(jtf_codigoUsuarioRequisitante.getText()));                
                if (jrb_consumo.isSelected()) {
                    armazemSaida.setMotivo("consumo");
                } else {
                    armazemSaida.setMotivo("descarte");
                }


                armazemSaida = controlArmazem.cadastraSaida(armazemSaida);

                if (armazem != null) {
                    controlArmazem.armazemItem(itens, armazemSaida);

                    controlArmazem.consultaQuantidade(itens, armazemSaida);
                    janelapai.ListaArmazem();
                    janelapai.setEnabled(true);
                    janelapai.setVisible(true);
                    this.setVisible(false);

                } else {
                    JOptionPane.showMessageDialog(null, "Erro grávidico");
                }
            }
        } catch (Exception erro) {
            erro.printStackTrace();
            JOptionPane.showMessageDialog(null, erro);
        }
    }

    private boolean verificaCampos() {
        String msgERRO = "Preencha os campos obrigatórios:\n";

        if (jtf_cod_arm.getText().equals("")) {
            msgERRO = msgERRO + " *Destino\n";
        }
        if (jftf_data.getText().equals("  /  /    ")) {
            msgERRO = msgERRO + " *Data de saída\n";
        }
        if (jTable1.getRowCount() == 0) {
            msgERRO = msgERRO + " *Adicione pelo menos 1 Produto\n";
        }
        if(jtf_codigoUsuarioRequisitante.getText().equals("")){
            msgERRO = msgERRO + " *Usuario Requisitante\n";
        }
        if(jtf_codigoVeiculo.getText().equals("")){
            msgERRO = msgERRO + " *Codigo Veiculo\n";
        }
        
        if (!msgERRO.equals("Preencha os campos obrigatórios:\n")) {
            JOptionPane.showMessageDialog(this, msgERRO);
            jftf_data.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    public boolean validaData(String dataString) throws ParseException {
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        Calendar cal = new GregorianCalendar();
        Date dataDigitada = new Date(df.parse(dataString).getTime());
        Date dataAtual = new Date(System.currentTimeMillis());

        // gerando o calendar
        cal.setTime(df.parse(dataString));

        // separando os dados da string para comparacao e validacao
        String[] data = dataString.split("/");
        String dia = data[0];
        String mes = data[1];
        String ano = data[2];
        // testando se hah discrepancia entre a data que foi
        // inserida no caledar e a data que foi passada como
        // string. se houver diferenca, a data passada era
        // invalida
        if ((new Integer(dia)).intValue() != (new Integer(cal.get(Calendar.DAY_OF_MONTH))).intValue()) {
            // dia nao caso
            return false;
        } else if ((new Integer(mes)).intValue() != (new Integer(cal.get(Calendar.MONTH) + 1)).intValue()) {
            // mes nao casou
            return false;
        } else if ((new Integer(ano)).intValue() != (new Integer(cal.get(Calendar.YEAR))).intValue()) {
            // ano nao casou
            return false;
        } else if (dataDigitada.after(dataAtual)) {
            // data maior que atual
            return false;
        }
        return true;
    }

    public void listarDestino() {
        DestinoDAO dest = new DestinoDAO();
        destinos = dest.listarDestinos();
        mostraDestinos(destinos);

    }

    public void mostraDestinos(List<ArmazemModel> destinos) {
        if (destinos.size() == 0) {
            JOptionPane.showMessageDialog(this, "Nenhum destino encontrado");

        } else {
            for (int i = 0; i < destinos.size(); i++) {//ou i<destino.size() para retornar todos
                ArmazemModel destinoModel = new ArmazemModel();
                destinoModel.setCod_destino(destinos.get(i).getCod_destino());
                destinoModel.setDesc_destino(destinos.get(i).getDesc_destino());
                ItemDbGrid hashDbGrid = new ItemDbGrid(destinoModel, destinoModel.getDesc_destino());
                //   jcb_destino.addItem(hashDbGrid);
                //   AutoCompletion auto = new AutoCompletion(jcb_destino);
            }
        }
    }

    public void listarProduto() {
        ProdutoDAO prod = new ProdutoDAO();
        produtos = prod.listarProdutos();
        mostraProdutos(produtos);

    }

    public void mostraProdutos(List<ProdutoModel> produtos) {
        if (produtos.size() == 0) {
            JOptionPane.showMessageDialog(this, "Nenhum produto encontrado");

        } else {
            for (int i = 0; i < produtos.size(); i++) {//ou i<destino.size() para retornar todos
                ProdutoModel produtoModel = new ProdutoModel();
                produtoModel.setCod_produto(produtos.get(i).getCod_produto());
                produtoModel.setNome_produto(produtos.get(i).getNome_produto());
                produtoModel.setConcentraçao(produtos.get(i).getConcentraçao());
                produtoModel.setEstoque(produtos.get(i).getEstoque());
                produtoModel.setEstoque_ideal(produtos.get(i).getEstoque_ideal());
                produtoModel.setEstoque_minimo(produtos.get(i).getEstoque_minimo());
                produtoModel.setGrupo(produtos.get(i).getGrupo());;
                produtoModel.setUnidade(produtos.get(i).getUnidade());
                ItemDbGrid hashDbGrid = new ItemDbGrid(produtoModel, produtoModel.getNome_produto());
                // jcb_produto.addItem(hashDbGrid);
                //AutoCompletion auto = new AutoCompletion(jcb_produto);
            }
        }
    }

    public void listarProduto1(ArmazemModel armazem, ProdutoModel produtoCombo) {
        ArmazemDAO arm = new ArmazemDAO();
        List<SaidaArmazemItemModel> armazens;
        armazens = arm.listaProdutoArmazem(armazem, produtoCombo);
        mostraProdutos1(armazens);

    }
    ProdutoModel produtoModel = new ProdutoModel();
    SaidaArmazemItemModel armazemItemModel = new SaidaArmazemItemModel();

    public void mostraProdutos1(List<SaidaArmazemItemModel> armazens) {
        Integer estoque = 0;
        if (armazens.size() == 0) {
            jtf_estoque.setText(String.valueOf(estoque));

        } else {
            for (int i = 0; i < armazens.size(); i++) {//ou i<destino.size() para retornar todos
                produtoModel.setCod_produto(armazens.get(i).getProduto().getCod_produto());
                produtoModel.setNome_produto(armazens.get(i).getProduto().getNome_produto());
                produtoModel.setConcentraçao(armazens.get(i).getProduto().getConcentraçao());

                armazemItemModel.setQuantidade(armazens.get(i).getQuantidade());
                estoque = estoque + armazemItemModel.getQuantidade();

            }
            armazemItemModel.setQuantidade(estoque);
            mostrarEstoque(armazemItemModel, produtoModel);
        }
    }

    private void mostrarEstoque(SaidaArmazemItemModel armazemItemModel, ProdutoModel produtoModel) {
        jtf_estoque.setText(String.valueOf(armazemItemModel.getQuantidade()));
        //jtf_codigo.setText(produtoModel.getConcentraçao());
    }

    private void removeProduto() {
        excluirProduto(jTable1);
    }

    private void excluirProduto(JTable tb) {
        DefaultTableModel row = (DefaultTableModel) jTable1.getModel();
        if (tb.getSelectedRow() != -1) {
            int selectedOption = JOptionPane.showConfirmDialog(this, "Deseja excluir ?", "Atenção", JOptionPane.YES_NO_OPTION);
            if (selectedOption == JOptionPane.YES_NO_OPTION) {
                row.removeRow(tb.getSelectedRow());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um produto");
        }
    }

    public boolean verificaTabela() {


        boolean tabela = true;
        if (jTable1.getRowCount() == 0) {
            return true;

        } else if (jTable1.getRowCount() > 0) {
            int linhas = jTable1.getRowCount();
            //JOptionPane.showMessageDialog(null, linhas);
            for (int i = 0; i < linhas; i++) {

                SaidaItemModel saida = new SaidaItemModel();
                saida.setProduto(new ProdutoModel((Integer) jTable1.getValueAt(i, 0)));

                if (saida.getProduto().getCod_produto() == produto.getCod_produto()) {
                      JOptionPane.showMessageDialog(null,"Este produto já foi inserido");
                    tabela = false;
                }
            }
            //JOptionPane.showMessageDialog(null, tabela);
            return tabela;
        }
        return tabela;
    }

    public void adicionarItem() {

        //saidaItemModel.setSaidaModel(saidaModel);
        armazemItemModel.setProduto(produto);
        armazemItemModel.setQuantidade(new Integer(jtf_quantidade.getText()));

        DefaultTableModel row = (DefaultTableModel) jTable1.getModel();
        ItemDbGrid hashDbGrid = new ItemDbGrid(armazemItemModel, armazemItemModel.getProduto().getNome_produto());
        row.addRow(new Object[]{armazemItemModel.getProduto().getCod_produto(), hashDbGrid, jtf_quantidade.getText()});
        limparItem();

    }

    public void limparItem() {
        // jcb_produto.requestFocus();
        jtf_produto.requestFocus();
        jtf_quantidade.setText("");
        jtf_estoque.setText("");
        jtf_codigo.setText("");
        jtf_produto.setText("");
    }
    ProdutoModel produto;

    public void carregaProduto(ProdutoModel produto) {
        this.produto = produto;
        jtf_codigo.setText(String.valueOf(produto.getCod_produto()));
        jtf_produto.setText(produto.getNome_produto());
        jtf_estoque.setText(String.valueOf(produto.getEstoque()));
        jtf_quantidade.requestFocus();
//                  
//                  
//          if(jtf_cod_arm.getText().equals("")){
//            JOptionPane.showMessageDialog(null,"Selecione um destino");            
//        } else {
//            listarProduto1(armazem,produto);                    
//        }
    }

    public void setStatusTela(boolean status) {
        if (status) {
            this.setVisible(status);
        }
        this.setEnabled(status);
    }
    ArmazemModel armazem;

    public void carregaDestino(ArmazemModel armazem) {
        this.armazem = armazem;
        jtf_cod_arm.setText(String.valueOf(armazem.getCod_destino()));
        jtf_armazem.setText(armazem.getDesc_destino());
        jtf_produto.requestFocus();
    }
    
     public void carregarVeiculo(VeiculoModel veiculo){
        jtf_codigoVeiculo.setText(veiculo.getCodigo()+"");
        jtf_veiculo.setText(veiculo.getDescricao()+"");
    }
     
    public void carregarUsuarioRequisitante(UsuarioRequisitanteModel requisitante){//UsuarioRequisitanteModel requisitante
        //UsuarioRequisitanteDAO usu = requisitante;
        jtf_usuarioRequisitante.setText(requisitante.getNome_requisitante());
        jtf_codigoUsuarioRequisitante.setText(requisitante.getCodigo_requisitante()+"");      
    }
}
