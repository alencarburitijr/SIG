/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Cad_Fornecedor.java
 *
 * Created on 06/04/2011, 16:41:51
 */
package br.com.sig.view;

import br.com.sig.dao.ProdutoDAO;
import br.com.medicalpharm.model.GrupoModel;
import br.com.medicalpharm.model.ProdutoModel;
import br.com.sig.util.ItemDbGrid;
import com.mysql.jdbc.PreparedStatement;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alencar
 */
public class ProdutoGUI extends javax.swing.JFrame {

    public TelaPrincipal janelapai;

    /** Creates new form Cad_Fornecedor */
    public ProdutoGUI() {
        initComponents();
        listaProduto();
        try {
          //  UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            // UIManager.setLookAndFeel("com.sun.java.swing.plaf.smoothmetal.SmoothmetalLookAndAndFeel");
            //UIManager.setLookAndFeel("com.birosoft.liquid.LiquidLookAndFeel");
            //UIManager.setLookAndFeel(seta_look);
         //   SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro);
        }
    }

    public void setTela(String permissao) {
        if (permissao.equals("usuario")) {
            jb_novo.setEnabled(false);
            jb_alterar1.setEnabled(false);
            jb_excluir1.setEnabled(false);
        } else {
        }
    }
    //   private String consultaGrupo = "SELECT idgrupo,descGrupo FROM grupo";
    String tipoCadastro;
    List<ProdutoModel> produtos;
    List<GrupoModel> grupos;
    PreparedStatement pstm;
    ResultSet rs;
    //public TelaPrincipal principal;
    DefaultTableModel tmProduto = new DefaultTableModel(null, new String[]{"Código", "Produto", "Concentração", "Grupo", "Estoque Minimo", "Estoque Ideal",
                "Unidade"});
    ListSelectionModel lsmProduto;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_codigo = new java.awt.TextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tf_pesquisar_produto = new javax.swing.JTextField();
        jb_buscar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jrb_apresentação = new javax.swing.JRadioButton();
        jrb_nome = new javax.swing.JRadioButton();
        jb_novo = new javax.swing.JButton();
        jb_alterar1 = new javax.swing.JButton();
        jb_excluir1 = new javax.swing.JButton();
        jb_sair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        tf_codigo.setName("tf_codigo"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciamento de produtos");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(893, 377, 380, -1));

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));
        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Consulta"));
        jPanel5.setName("jPanel5"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Parâmetro");
        jLabel1.setName("jLabel1"); // NOI18N

        tf_pesquisar_produto.setName("tf_pesquisar_produto"); // NOI18N
        tf_pesquisar_produto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_pesquisar_produtoKeyPressed(evt);
            }
        });

        jb_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/ok.png"))); // NOI18N
        jb_buscar.setText("Ir");
        jb_buscar.setName("jb_buscar"); // NOI18N
        jb_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_buscarActionPerformed(evt);
            }
        });

        jButton1.setText("Lote");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jrb_apresentação);
        jrb_apresentação.setSelected(true);
        jrb_apresentação.setText("Produto/Apresentação");
        jrb_apresentação.setName("jrb_apresentação"); // NOI18N

        buttonGroup2.add(jrb_nome);
        jrb_nome.setText("Nome Comercial");
        jrb_nome.setName("jrb_nome"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(tf_pesquisar_produto, javax.swing.GroupLayout.DEFAULT_SIZE, 836, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_buscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jrb_apresentação)
                        .addGap(14, 14, 14)
                        .addComponent(jrb_nome)
                        .addGap(672, 672, 672)))
                .addGap(6, 6, 6))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrb_apresentação)
                    .addComponent(jrb_nome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_pesquisar_produto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_buscar)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 50, 1070, 90));

        jb_novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/novo_registro.gif"))); // NOI18N
        jb_novo.setText("Novo");
        jb_novo.setName("jb_novo"); // NOI18N
        jb_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_novoActionPerformed(evt);
            }
        });
        getContentPane().add(jb_novo, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, -1, 35));

        jb_alterar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/alterar_registro.gif"))); // NOI18N
        jb_alterar1.setText("Alterar");
        jb_alterar1.setName("jb_alterar1"); // NOI18N
        jb_alterar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_alterar1ActionPerformed(evt);
            }
        });
        getContentPane().add(jb_alterar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 10, -1, 35));

        jb_excluir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/delete.gif"))); // NOI18N
        jb_excluir1.setText("Excluir");
        jb_excluir1.setName("jb_excluir1"); // NOI18N
        jb_excluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_excluir1ActionPerformed(evt);
            }
        });
        getContentPane().add(jb_excluir1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 10, -1, 35));

        jb_sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/medicalpharm/image/exit.png"))); // NOI18N
        jb_sair.setText("Sair");
        jb_sair.setName("jb_sair"); // NOI18N
        jb_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_sairActionPerformed(evt);
            }
        });
        getContentPane().add(jb_sair, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 10, -1, 35));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1 = new javax.swing.JTable();
        jTable1.setUpdateSelectionOnSort(false);
        jTable1.setVerifyInputWhenFocusTarget(false);
        jTable1.setDefaultEditor(Object.class, null);
        jTable1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e){
                if(e.getClickCount() == 2){
                    alterar();

                }}});
                jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Código", "Produto / Apresentação", "Unid", "Nome Comercial", "Grupo", "Sub-Grupo", "Est. Minimo", "Est. Ideal", "Est. Atual", "Ult. Preço", "Locação", "orca"
                    }
                ) {
                    Class[] types = new Class [] {
                        java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
                    };
                    boolean[] canEdit = new boolean [] {
                        false, false, false, false, false, true, false, false, false, false, false, false
                    };

                    public Class getColumnClass(int columnIndex) {
                        return types [columnIndex];
                    }

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit [columnIndex];
                    }
                });
                jTable1.setName("jTable1"); // NOI18N
                jTable1.getTableHeader().setReorderingAllowed(false);
                jScrollPane1.setViewportView(jTable1);
                if (jTable1.getColumnModel().getColumnCount() > 0) {
                    jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
                    jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
                    jTable1.getColumnModel().getColumn(2).setPreferredWidth(20);
                    jTable1.getColumnModel().getColumn(3).setPreferredWidth(170);
                    jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
                    jTable1.getColumnModel().getColumn(6).setPreferredWidth(30);
                    jTable1.getColumnModel().getColumn(7).setPreferredWidth(30);
                    jTable1.getColumnModel().getColumn(8).setPreferredWidth(30);
                    jTable1.getColumnModel().getColumn(9).setPreferredWidth(30);
                }

                getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 1070, 220));

                getAccessibleContext().setAccessibleParent(this);

                setSize(new java.awt.Dimension(1134, 496));
                setLocationRelativeTo(null);
            }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tf_pesquisar_produto.requestFocus();
//        
//        jt_pesquisar.getColumnModel().getColumn( 0 ).setMaxWidth( 70 );
//        jt_pesquisar.getColumnModel().getColumn( 0 ).setMinWidth( 70 );
//        jt_pesquisar.getTableHeader().getColumnModel().getColumn( 0 ).setMaxWidth( 70 );
//        jt_pesquisar.getTableHeader().getColumnModel().getColumn( 0 ).setMinWidth( 70 );
//
//        jt_pesquisar.getColumnModel().getColumn( 1 ).setMaxWidth( 280 );
//        jt_pesquisar.getColumnModel().getColumn( 1 ).setMinWidth( 280 );
//        jt_pesquisar.getTableHeader().getColumnModel().getColumn( 1 ).setMaxWidth( 280 );
//        jt_pesquisar.getTableHeader().getColumnModel().getColumn( 1 ).setMinWidth( 280 );
//
//        jt_pesquisar.getColumnModel().getColumn( 2 ).setMaxWidth( 150 );
//        jt_pesquisar.getColumnModel().getColumn( 2 ).setMinWidth( 150 );
//        jt_pesquisar.getTableHeader().getColumnModel().getColumn( 2 ).setMaxWidth( 150 );
//        jt_pesquisar.getTableHeader().getColumnModel().getColumn( 2 ).setMinWidth( 150 );
//
//        jt_pesquisar.getColumnModel().getColumn( 3 ).setMaxWidth( 100 );
//        jt_pesquisar.getColumnModel().getColumn( 3 ).setMinWidth( 100 );
//        jt_pesquisar.getTableHeader().getColumnModel().getColumn( 3 ).setMaxWidth( 100 );
//        jt_pesquisar.getTableHeader().getColumnModel().getColumn( 3 ).setMinWidth( 100 );
////
////        jt_pesquisar.getColumnModel().getColumn( 4 ).setMaxWidth( 100 );
////        jt_pesquisar.getColumnModel().getColumn( 4 ).setMinWidth( 100 );
////        jt_pesquisar.getTableHeader().getColumnModel().getColumn( 4 ).setMaxWidth( 100 );
////        jt_pesquisar.getTableHeader().getColumnModel().getColumn( 4 ).setMinWidth( 100 );
    }//GEN-LAST:event_formWindowOpened

    private void jb_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_buscarActionPerformed
        if(jrb_apresentação.isSelected()){
            listaProduto();            
        } else {
            listarComercial();
        }    

//
//        if (jrb_codigo.isSelected() == true) {
//            listaProdutoCodigo();
//
//        } else if (jrb_descricao.isSelected() == true) {
//            listaProdutoDescricao();
//        } else {
//
//        }
    }//GEN-LAST:event_jb_buscarActionPerformed

    private void jb_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_novoActionPerformed
        try {
            ProdutoCadastroGUI prod = new ProdutoCadastroGUI();
            prod.setVisible(true);
            prod.janelapai = this;
            this.setEnabled(false);
        } catch (SQLException ex) {
            Logger.getLogger(ProdutoGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jb_novoActionPerformed

    private void jb_alterar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_alterar1ActionPerformed
        alterar();
        // TODO add your handling code here:
}//GEN-LAST:event_jb_alterar1ActionPerformed
    public void alterar() {
        ProdutoModel prod = tbProdutoLinhaSelecionada(jTable1);
        if (prod != null) {
            ProdutoAlterarGUI produtoAltera = new ProdutoAlterarGUI(prod);
            produtoAltera.janelapai = this;
            produtoAltera.setVisible(true);
            this.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um produto");
            tf_pesquisar_produto.requestFocus();
        }
    }
    private void jb_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_sairActionPerformed
        setVisible(false);
        telaPrincipal.setStatusTela(true);

}//GEN-LAST:event_jb_sairActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        telaPrincipal.setStatusTela(true);
        setVisible(false);
    }//GEN-LAST:event_formWindowClosed

    private void jb_excluir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_excluir1ActionPerformed
        excluiProduto();
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_excluir1ActionPerformed

    private void tf_pesquisar_produtoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_pesquisar_produtoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    if(jrb_apresentação.isSelected()){
            listaProduto();            
        } else {
            listarComercial();
        }    
        }
    }//GEN-LAST:event_tf_pesquisar_produtoKeyPressed
    public void lote() {
        ProdutoModel prod = tbProdutoLinhaSelecionada(jTable1);
        if (prod != null) {
            LoteGUI loteGUI = new LoteGUI(prod);
            loteGUI.janelapai = this;
            loteGUI.setVisible(true);
            this.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um produto");
            tf_pesquisar_produto.requestFocus();
        }
    }
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    lote();
    
    
    // TODO add your handling code here:
}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ProdutoGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jb_alterar1;
    private javax.swing.JButton jb_buscar;
    private javax.swing.JButton jb_excluir1;
    private javax.swing.JButton jb_novo;
    private javax.swing.JButton jb_sair;
    private javax.swing.JRadioButton jrb_apresentação;
    private javax.swing.JRadioButton jrb_nome;
    private java.awt.TextField tf_codigo;
    private javax.swing.JTextField tf_pesquisar_produto;
    // End of variables declaration//GEN-END:variables
    private TelaPrincipal_Interface telaPrincipal;
    //Recebendo tela como parametro para atualização apos pesquisa

    public void setTelaPrincipal(TelaPrincipal_Interface telaPrincipal) {
        this.telaPrincipal = telaPrincipal;
    }

    public void listaProduto() {
        ProdutoDAO prod = new ProdutoDAO();
        produtos = prod.listarProduto("%" + tf_pesquisar_produto.getText().trim() + "%");
        mostraProduto(produtos);
    }
    private void listarComercial() {
        ProdutoDAO prod = new ProdutoDAO();
        produtos = prod.listarProdutoComercial("%" + tf_pesquisar_produto.getText().trim() + "%");
        mostraProduto(produtos);
    }

//    public void listaProdutoCodigo() {
//        ProdutoDAO prod = new ProdutoDAO();
//        produtos = prod.listarProdutoCodigo(tf_pesquisar_produto.getText().trim());
//        mostraProduto(produtos);
//    }

//    public void listaProdutoDescricao() {
//        ProdutoDAO prod = new ProdutoDAO();
//        produtos = prod.listarProdutoDescricao1(tf_pesquisar_produto.getText().trim() + "%");
//        mostraProduto(produtos);
//    }

    public void mostraProduto(List<ProdutoModel> produtos) {
        ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
        jTable1.updateUI();
        String preço = null;
        if (produtos.size() == 0) {
            JOptionPane.showMessageDialog(this, "Nenhum produto encontrado");

        } else {
            for (int i = 0; i < produtos.size(); i++) {
                ProdutoModel produto = new ProdutoModel();
                produto.setCod_produto(produtos.get(i).getCod_produto());
                produto.setNome_produto(produtos.get(i).getNome_produto());
                produto.setConcentraçao(produtos.get(i).getConcentraçao());
                produto.setEstoque(produtos.get(i).getEstoque());
                produto.setEstoque_ideal(produtos.get(i).getEstoque_ideal());
                produto.setEstoque_minimo(produtos.get(i).getEstoque_minimo());
                produto.setGrupo(produtos.get(i).getGrupo());
                produto.setUnidade(produtos.get(i).getUnidade());
                produto.setUltimo_preco(produtos.get(i).getUltimo_preco());
                produto.setSubGrupo(produtos.get(i).getSubGrupo());
                produto.setLocacao(produtos.get(i).getLocacao());                
                
                preço = String.valueOf(produtos.get(i).getUltimo_preco());
                preço = setPrecoFormat(preço);

                DefaultTableModel row = (DefaultTableModel) jTable1.getModel();
                
                //javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) tbl.getModel();  
                //dtm.addRow(new Object[]{" ", " ", " ", " ", " ", " ", " ", " ", " "});  
    //cada " " para cada coluna da tabela e para um check box vc coloca true ou false (true marcado false marcado), configura o campo como boolean na tabela antes blz  
                ItemDbGrid hashDbGrid = new ItemDbGrid(produto, produto.getNome_produto());
                row.addRow(new Object[]{produto.getCod_produto(), hashDbGrid,produto.getUnidade().getSigla_unidade(), produto.getConcentraçao(), produto.getGrupo().getDesc_grupo(),produto.getSubGrupo().getDescSubGrupo(),
                produto.getEstoque_minimo(), produto.getEstoque_ideal(), produto.getEstoque(),preço,produto.getLocacao(),true});
            }
        }
    }
    ProdutoModel produto = new ProdutoModel();
    ProdutoDAO produtoControl = new ProdutoDAO();

    public ProdutoModel tbProdutoLinhaSelecionada(JTable tb) {
        ProdutoModel prod = null;
        if (tb.getSelectedRow() != -1) {
            prod = new ProdutoModel();
            prod.setCod_produto(produtos.get(tb.getSelectedRow()).getCod_produto());
            prod.setConcentraçao(produtos.get(tb.getSelectedRow()).getConcentraçao());
            prod.setNome_produto(produtos.get(tb.getSelectedRow()).getNome_produto());
            prod.setEstoque_ideal(produtos.get(tb.getSelectedRow()).getEstoque_ideal());
            prod.setEstoque_minimo(produtos.get(tb.getSelectedRow()).getEstoque_minimo());
            prod.setEstoque(produtos.get(tb.getSelectedRow()).getEstoque());
            prod.setGrupo(produtos.get(tb.getSelectedRow()).getGrupo());
            prod.setUnidade(produtos.get(tb.getSelectedRow()).getUnidade());
            prod.setSubGrupo(produtos.get(tb.getSelectedRow()).getSubGrupo());
            prod.setLocacao(produtos.get(tb.getSelectedRow()).getLocacao());
        }
        return prod;
    }

    public void excluiProduto() {
        removeProduto(jTable1);
    }

    private ProdutoModel removeProduto(JTable tb) {
        DefaultTableModel row = (DefaultTableModel) jTable1.getModel();
        if (tb.getSelectedRow() != -1) {

            int selectedOption = JOptionPane.showConfirmDialog(this, "Deseja excluir ?", "Atenção", JOptionPane.YES_NO_OPTION);
            if (selectedOption == JOptionPane.YES_NO_OPTION) {
                ProdutoDAO produtosControl = new ProdutoDAO();
                produto.setCod_produto(produtos.get(tb.getSelectedRow()).getCod_produto());
                if (produtosControl.excluirProduto(produto)) {
                    row.removeRow(tb.getSelectedRow());
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um produto");
        }
        return produto;
    }

    public void request() {
        tf_pesquisar_produto.requestFocus();
    }
    
    public String setPrecoFormat(String preco) {
        DecimalFormat dFormat = new DecimalFormat();
        dFormat.applyPattern("R$ #0.00");
        return dFormat.format(getPrecoFormato(preco));
    }
        public Double getPrecoFormato(String preco) {
        Double precoFormatado = 0.0;
        try {
            preco = preco.replace("R", "");
            preco = preco.replace("$", "");
            preco = preco.replace(",", ".");
            preco = preco.replace(" ", "");
            precoFormatado = Double.parseDouble(preco.trim());

            //this.objFuncionario.setSalario(getSalarioFormat(jTSalario.getText())); pegar valor em double

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Valor Informado Incorreto!\nInforme um valor com o seguinte formato:\nEx: 100,00");
        }
        return precoFormatado;
    }


}
